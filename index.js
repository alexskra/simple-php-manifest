const pluginName = 'SimplePhpManifestWebpackPlugin';
const path = require('path');
const fs = require('fs');

class SimplePhpManifest {

    constructor(options = {}) {
        this.options = {
            className: ('className' in options) ? options.className : 'SimplePhpManifest',
            outputDir: ('outputDir' in options) ? options.outputDir : './',
            namespace: ('namespace' in options) ? options.namespace : '',
        };

        this.assets = {
            css: {},
            js: {}
        };
    }

    addAsset(chunkName, asset) {
        let assetType = asset.split('.').pop();
        if (assetType !== 'css' && assetType !== 'js') {
            return false;
        }

        this.assets[assetType][chunkName] = asset;
    }

    apply(compiler) {
        compiler.hooks.done.tap(pluginName, (stats) => {
            let assetsByChunkName = stats.compilation.getStats().toJson().assetsByChunkName;

            for (let [chunkName, assets] of Object.entries(assetsByChunkName)) {
                if (Array.isArray(assets)) {
                    assets.forEach(asset => {
                        this.addAsset(chunkName, asset);
                    });
                } else {
                    this.addAsset(chunkName, assets);
                }
            }

            this.savePhpFile(path.join(compiler.options.output.path, this.options.outputDir));
        });
    }

    savePhpFile(directoryPath) {
        fs.mkdirSync(directoryPath, {recursive: true});
        fs.writeFileSync(directoryPath + '/' + this.options.className + '.php', this.phpOutput());
    }

    getNamespace() {
        if (this.options.namespace === '') {
            return ''
        }

        return `\nnamespace ${this.options.namespace};\n`;
    }

    getPhpArray(type) {
        let out = '';
        for (let [chunkName, asset] of Object.entries(this.assets[type])) {
            out += `            '${chunkName}' => '${asset}',\n`;
        }
        return out.trimEnd();
    }

    phpOutput() {
        return `<?php
${this.getNamespace()}
/**
 * Class ${this.options.className}
 *
 * Generated by simple-php-manifest Used to get the filenames outputted by webpack.
 * @author alexskra.com
 */
class ${this.options.className}
{
    /**
     * Contains a list of CSS and JS assets.
     *
     * @var array
     */
    protected static $assets = [
        'js' => [
${this.getPhpArray('js')}
        ],
        'css' => [
${this.getPhpArray('css')}
        ]
    ];

    /**
     * Gets the JS filename by chunkName.
     *
     * @param string $chunkName
     * @return string
     */
    public static function js(string $chunkName): string
    {
        return self::$assets['js'][$chunkName];
    }

    /**
     * Gets the CSS filename by chunkName.
     *
     * @param string $chunkName
     * @return string
     */
    public static function css(string $chunkName): string
    {
        return self::$assets['css'][$chunkName];
    }
}`;
    }
}

module.exports = SimplePhpManifest;